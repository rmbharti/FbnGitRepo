sudo apt-get update

#Install docker
sudo apt-get install docker.io

sudo apt-get -y install lxc
sudo gpasswd -a ${USER} docker
newgrp docker
sudo service docker restart

# Commands followed to install jdk8
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer



#Setting the JAVA_HOME Environment Variable

# command to checklocation of java
sudo update-alternatives --config java
sudo nano /etc/environment
JAVA_HOME="/usr/lib/jvm/java-8-oracle"


sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
CODENAME=$(lsb_release -cs)
echo "deb http://repos.mesosphere.io/${DISTRO} ${CODENAME} main" | sudo tee /etc/apt/sources.list.d/mesosphere.list

sudo apt-get update
sudo apt-get -y install mesos   
sudo apt-get update
sudo apt-get -y install mesosphere 

# Command to ensure masters on ly run masters and not slave


#Stop zookeeper and master on slave nodes
sudo stop zookeeper
echo manual | sudo tee /etc/init/zookeeper.override

sudo stop mesos-master
echo manual | sudo tee /etc/init/mesos-master.override

sudo stop marathon
echo manual | sudo tee /etc/init/marathon.override

sudo stop mesos-slave
echo manual | sudo tee /etc/init/mesos-slave.override

-- Setting Master 1

Run on slave - 1
echo 172.31.40.65 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk

Run on slave - 2
echo 172.31.43.193 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk

Run on slave - 3
echo 172.31.36.209 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk

Run on slave - 4
echo 172.31.31.220 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk


Run on slave - 5
echo 172.31.3.205 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk

Run on Slave 6
echo 172.31.28.123 | sudo tee /etc/mesos-slave/ip
sudo cp /etc/mesos-slave/ip /etc/mesos-slave/hostname
echo zk://172.31.20.169:2181,172.31.38.97:2181,172.31.47.88:2181,172.31.22.150:2181,172.31.30.203:2181/mesos | sudo tee /etc/mesos/zk


sudo service zookeeper stop 
sudo service mesos-master stop 
sudo service mesos-slave start 



# Set Unique identifier for masters in cluster
# Master 1
sudo echo 1 > /etc/zookeeper/conf/myid
# Master 2
sudo echo 2 > /etc/zookeeper/conf/myid
# Master 3
sudo echo 3 > /etc/zookeeper/conf/myid


# Make entries in zoo.cfg to point to all masters
sudo vi /etc/zookeeper/conf/zoo.cfg

server.1=172.31.47.88:2888:3888
server.2=172.31.38.97:2888:3888
server.3=172.31.35.214:2888:3888


# Now, you need to edit your /etc/mesos/zk informing the zookeeper url of your cluster:

echo zk://172.31.47.88:2181,172.31.38.97:2181,172.31.35.214:2181/mesos >  /etc/mesos/zk

Since we have three master machines, the mesos quorum will be 2:
echo 2 > /etc/mesos-master/quorum

# Disabling Mesos slave on the master nodes
# Since we have a separated slave pool, there is no need to use Mesos slave alongside our Mesos master instances, so, let's disable it:

sudo service mesos-slave stop

# Gets the list of all services on machine
service --status-all

sudo service mesos-master stop
sudo service mesos-master start
sudo service mesos-slave stop

sudo service zookeeper restart
sudo service marathon restart

Edit /etc/mesos/zk for Slave 1 ,2 ,3 

Slave 1 172.31.40.65 - Master 1 - 172.31.35.214

zk://172.31.35.214:2181/mesos

Slave 2 172.31.43.193  Master 2 - 172.31.38.97
sudo nano  /etc/mesos/zk 
zk://172.31.38.97:2181/mesos

Slave 3 172.31.36.209 Master 3- 172.31.47.88
sudo nano  /etc/mesos/zk 
zk://172.31.47.88:2181/mesos

Validate cluster
http://master-1:5050/


Add Mesos master node Ip to /etc/mesos-master/ip
echo 172.31.35.214  | sudo tee /etc/mesos-master/ip

Add Mesos master node Hostname to /etc/mesos-master/hostname
echo `hostname -f` | sudo tee /etc/mesos-master/hostname

echo manual | sudo tee /etc/init/zookeeper.override

#Port to listen on (master default: 5050 and slave default: 5051)
echo ports:[[8000-9999,31000-32000]] | sudo tee /etc/mesos-slave/resources

echo “docker,mesos” | sudo tee /etc/mesos-slave/containerizers



# Mesos failure error can be resolved by
./bin/mesos-master.sh --ip=x.x.x.x --work_dir=/var/lib/mesos --hostname=x.x.x.x


Finally I have to create my own mesos-slave image with docker installed, and now everything works and I can execute docker images through marathon

Dockerfile:

# Initial Image
FROM mesosphere/mesos-slave:0.28.0-2.0.16.ubuntu1404

# Dependencies
sudo apt-get update --fix-missing
sudo  apt-get install docker.io -y


 was having the same issues and what fixed it for me was the zookeeper configuration. In my case I was using the EC2 public IP Address rather than the private one. Once I changed the /etc/mesos/zk file to zk://<private IP>:2181/mesos I was able to connect without the constant error messages. In other words, zookeeper was reporting to be running in one IP and mesos-master was trying to connect using a different IP.
 
 
#Configuring Marathon
Add the following lines to /etc/sysconfig/marathon:
MARATHON_EVENT_SUBSCRIBER=http_callback  
MARATHON_TASK_LAUNCH_TIMEOUT=600000  
MARATHON_TASK_LOST_EXPUNGE_GC=60000  
MARATHON_TASK_LOST_EXPUNGE_INITIAL_DELAY=60000  
MARATHON_TASK_LOST_EXPUNGE_INTERVAL=60000  
#Depending on the task you want to run in Marathon, it can take quite while to start, so, we increased the task launch timeout to 10 minutes. Also, we are enabling the http callback feature for the service discovery, thus, Nixy will register itself in Marathon for the service discovery and finally update Nginx if any service is healthy/unhealthy. Also, we decreased the interval time for Marathon to remove lost tasks that may happen sometimes.





sudo apt






































# install Java and set env path
# get key from key server hkp://keyserver.ubuntu.com:80


sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E56151BF

DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
CODENAME=$(lsb_release -cs)
echo "deb http://repos.mesosphere.com/${DISTRO} ${CODENAME} main" | sudo tee /etc/apt/sources.list.d/mesosphere.list


///


nstall

cat <<EOF >> /etc/apt/sources.list.d/mesosphere.list
deb http://repos.mesosphere.com/ubuntu xenial main
EOF

apt update
apt-get -y install mesos marathon  